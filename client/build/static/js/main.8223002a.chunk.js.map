{"version":3,"sources":["assets/icon/min.png","assets/icon/radio.png","serviceWorker.js","components/Timer.js","components/Clock.js","components/News.js","components/Radio.js","service/iconService.js","components/Weather.js","service/renderComponent.js","views/Dashboard.js","routes.js","views/AdminPage.js","SwitchRoutes.js","views/RadioPage.js","views/TimerPage.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Timer","href","src","minuteur","className","style","alt","React","Component","Clock","props","state","seconds","this","setState","prevState","interval","setInterval","tick","clearInterval","clockFormat","FormatHorloge","Header","as","inverted","textAlign","format","locale","tz","TimeZone","Subheader","FormatDate","News","news","axios","get","Source","then","res","data","articles","slice","NewsNumber","map","n","Grid","Column","key","url","Row","Image","urlToImage","verticalAlign","size","floated","title","date","publishedAt","description","length","Loader","active","columns","renderList","Radio","radio","centered","GetIcon","name","Weather","main","icon","temp","actuel","min","max","wind","speed","deg","humidity","sunrise","sunset","isError","errorMsg","Axios","Location","response","result","status","console","log","weather","precise","temp_min","temp_max","sys","catch","error","message","x","Temperature","Number","parseFloat","toFixed","Math","trunc","d","Date","getHours","getMinutes","Message","header","content","RenderComponent","component","Object","keys","Localisation","Horloge","Dashboard","db","DashboardConfig","val","segment_style","height","floor","document","body","offsetHeight","overflow","bloc_style","padding","marging","undefined","id","TopLeft","TopRight","BottomLeft","BottomRight","Button","labelPosition","Link","to","Icon","position","top","left","dashBoardRoutes","path","handleChangeForm","e","value","nameSplited","split","stateKey","nameKey","widgetKey","config","assign","WidgetList","generateForm","configAvailable","formField","info","entries","param","push","Form","Select","label","defaultValue","options","generateFormSelect","onChange","Input","handleChange","updateJson","ConfigTopLeft","ConfigBottomLeft","ConfigTopRight","ConfigBottomRight","post","text","values","forEach","onSubmit","createOptionList","Divider","horizontal","Group","type","onClick","reload","Or","positive","handleSave","Container","fluid","renderFormPosition","switchRoutes","routes","prop","render","from","RadioPage","source","i","Active","circular","Img","createMusicPlayer","listRadio","srcRadio","hour_val","getSeconds","autoPlay","onPlay","TimerPage","hist","createBrowserHistory","ReactDOM","history","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8223002a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/min.e4a40953.png\";","module.exports = __webpack_public_path__ + \"static/media/radio.2d3426f8.png\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './Timer.component.css';\r\nimport minuteur from '../assets/icon/min.png';\r\n\r\nclass Timer extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <a href=\"/timer\">\r\n                    <img src={minuteur} className=\"ui small centered image\" style={{'height':'auto','width':'auto'}} alt=\"\" />\r\n                </a>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Timer;","import 'moment-timezone';\r\nimport 'moment/locale/fr';\r\nimport React from 'react';\r\nimport Moment from 'react-moment';\r\nimport { Header } from 'semantic-ui-react';\r\nimport './Clock.component.scss';\r\nclass Clock extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { seconds: 0 };\r\n    }\r\n\r\n    tick() {\r\n        this.setState(prevState => ({\r\n            seconds: prevState.seconds + 1\r\n        }));\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.interval = setInterval(() => this.tick(), 1000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n    render() {\r\n        let clockFormat = \"\"\r\n        if (this.props.FormatHorloge === \"12h\") {\r\n            clockFormat = \"hh:mm:ss\"\r\n        } else {\r\n            clockFormat = \"HH:mm:ss\"\r\n        }\r\n        return (\r\n            <div className=\"clock\">\r\n                <Header as='h1' className='hour mb-0' inverted textAlign='center'>\r\n                    <Moment format={clockFormat} locale=\"fr\" tz={this.props.TimeZone} />\r\n                    <Header.Subheader className='date'>\r\n                        <Moment format={this.props.FormatDate} locale=\"fr\" />\r\n                    </Header.Subheader>\r\n                </Header>\r\n                <Header as='h4' inverted textAlign='center'>\r\n                    {this.props.TimeZone}\r\n                </Header>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Clock;","import axios from \"axios\";\r\nimport React from \"react\";\r\nimport Moment from \"react-moment\";\r\nimport { Grid, Header, Image, Loader } from \"semantic-ui-react\";\r\nimport './News.component.css';\r\n\r\nclass News extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { news: [] }\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(this.props.Source).then(res => {\r\n      const news = res.data.articles;\r\n      this.setState({ news: news });\r\n    });\r\n  };\r\n\r\n  renderList() {\r\n    return this.state.news.slice(0, this.props.NewsNumber).map(n => {\r\n      return (\r\n        <Grid.Column key={n.url}>\r\n          <Grid.Row>\r\n            <Header as=\"h2\" inverted>\r\n              <Image src={n.urlToImage} verticalAlign='middle' size='small' floated='left' /> {n.title}\r\n              <Header.Subheader>\r\n                <b><Moment date={n.publishedAt} format=\"HH:mm DD/MM/YYYY\" /></b>\r\n                <p>{n.description}</p>\r\n              </Header.Subheader>\r\n            </Header>\r\n          </Grid.Row>\r\n        </Grid.Column>\r\n      )\r\n    })\r\n  }\r\n\r\n  render() {\r\n    if (this.state.news.length === 0) {\r\n      return <Loader active />\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Grid columns={1} className='news'>\r\n          {this.renderList()}\r\n        </Grid>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default News\r\n","import React from \"react\";\r\nimport './Radio.component.css';\r\nimport radio from '../assets/icon/radio.png';\r\nimport { Image } from \"semantic-ui-react\";\r\n\r\nclass Radio extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <a href=\"/radio\">\r\n                    <br/>\r\n                    <br/>\r\n                    <Image src={radio} size='medium' centered/>\r\n                </a>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Radio","export default function GetIcon(name) {\r\n    const icons = {\r\n        \"light rain\": \"wi-rain\",\r\n        \"moderate rain\": \"wi-rain\",\r\n        \"heavy intensity rain\": \"wi-day-rain\",\r\n        \"very heavy rain\": \"wi-day-rain\",\r\n        \"extreme rain\": \"wi-rain\",\r\n        \"freezing rain\": \"wi-rain-mix\",\r\n        \"light intensity shower rain\": \"wi-showers\",\r\n        \"heavy intensity shower rain\": \"wi-showers\",\r\n        \"ragged shower rain\t\": \"wi-showers\",\r\n        \"thunderstorm with light rain\":\"wi-thunderstorm\",\r\n        \"thunderstorm with rain\": \"wi-thunderstorm\",\r\n        \"thunderstorm with heavy rain\": \"wi-thunderstorm\",\r\n        \"light thunderstorm\": \"wi-thunderstorm\",\r\n        \"heavy thunderstorm\": \"wi-thunderstorm\",\r\n        \"ragged thunderstorm\": \"wi-thunderstorm\",\r\n        \"thunderstorm with light drizzle\": \"wi-thunderstorm\",\r\n        \"thunderstorm with drizzle\": \"wi-thunderstorm\",\r\n        \"thunderstorm with heavy drizzle\": \"wi-thunderstorm\",\r\n        \"light intensity drizzle\": \"wi-sprinkle\",\r\n        \"drizzle\": \"wi-sprinkle\",\r\n        \"heavy intensity drizzle\": \"wi-sprinkle\",\r\n        \"light intensity drizzle rain\": \"wi-sprinkle\",\r\n        \"drizzle rain\": \"wi-sprinkle\",\r\n        \"heavy intensity drizzle rain\": \"wi-sprinkle\",\r\n        \"shower rain and drizzle\": \"wi-sprinkle\",\r\n        \"heavy shower rain and drizzle\": \"wi-showers\",\r\n        \"shower drizzle\": \"wi-showers\",\r\n        \"light snow\": \"wi-snow\",\r\n        \"Snow\": \"wi-snow\",\r\n        \"Heavy snow\": \"wi-snow\",\r\n        \"Sleet\": \"wi-snow\",\r\n        \"Light shower sleet\": \"wi-snow\",\r\n        \"Shower sleet\": \"wi-snow\",\r\n        \"Light rain and snow\": \"wi-snow\",\r\n        \"Rain and snow\": \"wi-snow\",\r\n        \"Light shower snow\": \"wi-snow\",\r\n        \"Shower snow\": \"wi-snow\",\r\n        \"Heavy shower snow\": \"wi-snow\",\r\n        \"clear sky\": \"wi-day-sunny\",\r\n        \"few clouds: 11-25%\t\": \"wi-day-cloudy\",\r\n        \"scattered clouds: 25-50%\": \"wi-day-cloudy\",\r\n        \"broken clouds: 51-84%\": \"wi-day-cloudy\", \r\n        \"overcast clouds: 85-100%\":\"wi-day-cloudy\",\r\n        \"few clouds\": \"wi-day-cloudy\",\r\n        \"scattered clouds\": \"wi-day-cloudy-high\",\r\n        \"broken clouds\":\"wi-day-cloudy-high\",\r\n        \"shower rain\":\"wi-showers\",\r\n        \"rain\":\"wi-rain\",\r\n        \"thunderstorm\": \"wi-thunderstorm\",\r\n        \"snow\": \"wi-snowflake-cold\",\r\n        \"mist\":\"wi-fog\",\r\n        \"Celcius\":\"wi-celcius\",\r\n        \"Fahrenheit\": \"wi-fahrenheit\"\r\n    }\r\n    return icons[name]\r\n}","import Axios from \"axios\";\r\nimport React from \"react\";\r\nimport { Message } from \"semantic-ui-react\";\r\nimport GetIcon from \"../service/iconService.js\"\r\nimport 'weathericons/css/weather-icons.css';\r\nimport 'weathericons/css/weather-icons-wind.css';\r\n\r\nclass Weather extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            main: null,\r\n            description: null,\r\n            icon: null,\r\n            temp: {\r\n                actuel: null,\r\n                min: null,\r\n                max: null\r\n            },\r\n            wind: {\r\n                speed: null,\r\n                deg: null\r\n            },\r\n            humidity: null,\r\n            sunrise: null,\r\n            sunset: null,\r\n            name: null,\r\n            isError: false,\r\n            errorMsg: \"\",\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        //https://api.openweathermap.org/data/2.5/weather?q=rennes&APPID=fbea750d7d1154542724db10d81cfd9e&lang=fr\r\n        Axios.get(\"https://api.openweathermap.org/data/2.5/weather?q=\" + this.props.Location + \"&APPID=fbea750d7d1154542724db10d81cfd9e&units=metric\")\r\n            .then((response) => {\r\n                var result = response.data\r\n                if (response.status === 200) {\r\n                    console.log(result)\r\n                    this.setState({\r\n                        main: result.weather[0].description,\r\n                        icon: result.weather[0].icon,\r\n                        description: result.weather[0].description,\r\n                        temp: {\r\n                            actuel: this.precise(result.main.temp),\r\n                            min: this.precise(result.main.temp_min),\r\n                            max: this.precise(result.main.temp_max)\r\n                        },\r\n                        wind: {\r\n                            speed: result.wind.speed,\r\n                            deg: result.wind.deg,\r\n                        },\r\n                        humidity: result.main.humidity + \" %\",\r\n                        sunrise: this.format(result.sys.sunrise),\r\n                        sunset: this.format(result.sys.sunset),\r\n                        name: result.name\r\n                    });\r\n                }\r\n            }).catch((error) => {\r\n                if (error.response) {\r\n                    this.setState({\r\n                        isError: true,\r\n                        errorMsg: error.response.data.message\r\n                    })\r\n                }\r\n            });\r\n    }\r\n\r\n    // TOUTES LES FONCTIONS UTILES DANS LE COMPOSANT\r\n    precise(x) {\r\n        if (this.props.Temperature === \"Kelvin\") {\r\n            return Number.parseFloat(x + 273.15).toFixed(2);\r\n        } else if (this.props.Temperature === \"Fahrenheit\") {\r\n            return Number.parseFloat(x * 1.8 + 32).toFixed(0)\r\n        }\r\n        else {\r\n            return Math.trunc(x);\r\n        }\r\n    }\r\n\r\n    format(date) {\r\n        let d = new Date(date * 1000);\r\n        return d.getHours() + \"H\" + d.getMinutes();\r\n    }\r\n\r\n    render() {\r\n        // let icon_link = \"https://openweathermap.org/img/wn/\" + this.state.icon + \"@2x.png\";\r\n        if (this.state.isError) {\r\n            return (\r\n                <div>\r\n                    <Message error icon='warning' header='Erreur lors de la récupération de la météo'\r\n                        content={this.state.errorMsg} />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className={\"ui blue inverted segment\"} style={{ textAlign: \"center\" }}>\r\n                <br />\r\n                <i className={\"inverted center aligned font-big hour mb-0 wi \" + GetIcon(this.state.main)} />\r\n                <br />\r\n                <br />\r\n                <h1>{this.state.name}</h1>\r\n                <br />\r\n                <div className=\"ui grid centered\">\r\n                    <div className=\"four wide column text-center\">\r\n                        <div><span className={\"font-massive\"}><i className='wi wi-thermometer' /></span></div><br />\r\n                        <span className={\"font-large\"}>\r\n                            {this.state.temp.actuel} <i className={'wi ' + GetIcon(this.props.Temperature)} />&nbsp;\r\n                            (<i className='wi wi-direction-down' /> {this.state.temp.min} <i className={'wi ' + GetIcon(this.props.Temperature)} /> à \r\n                            <i className='wi wi-direction-up' /> {this.state.temp.max} <i className={'wi ' + GetIcon(this.props.Temperature)} />)\r\n                            </span>\r\n                    </div>\r\n                    <div className=\"four wide column text-center\">\r\n                        <div><span className={\"font-massive\"}><i className='wi wi-day-sunny' /></span></div><br />\r\n                        <span className={\"font-large\"}><i\r\n                            className='wi wi-sunrise' /> {this.state.sunrise} à {this.state.sunset} <i\r\n                                className='wi wi-sunset' />\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"four wide column text-center\">\r\n                        <div><span className={\"font-massive\"}><i className='wi wi-humidity' /></span></div><br />\r\n                        <span className={\"font-large\"}>\r\n                            {this.state.humidity}\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"four wide column text-center\">\r\n                        <div><span className={\"font-massive\"}><i className='wi wi-strong-wind' /></span></div><br />\r\n                        <span className={\"font-large\"}>\r\n                            {this.state.wind.speed + \" km/h\"} (<i\r\n                                className={\"wi wi-wind towards-\" + this.state.wind.deg + \"-deg\"} /> {this.state.wind.deg})\r\n                    </span>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Weather;","import React from 'react'\r\nimport Clock from \"../components/Clock\"\r\nimport News from \"../components/News\"\r\nimport Radio from \"../components/Radio\"\r\nimport Timer from \"../components/Timer\"\r\nimport Weather from \"../components/Weather\"\r\n\r\nexport default function RenderComponent(component) {\r\n    switch (Object.keys(component)[0]) {\r\n        case 'Météo':\r\n            return <Weather\r\n                Location={component[\"Météo\"].Localisation}\r\n                Temperature={component[\"Météo\"].Temperature}\r\n            />;\r\n        case 'Horloge':\r\n            return <Clock\r\n                TimeZone={component.Horloge[\"Time Zone\"]}\r\n                FormatHorloge={component.Horloge[\"Format Heure\"]}\r\n                FormatDate={component.Horloge[\"Format Date\"]}\r\n            />;\r\n        case 'News':\r\n            return <News Source={component.News.Source} NewsNumber={component.News[\"News à afficher\"]} />;\r\n        case 'Radio':\r\n            return <Radio Source={component.Radio.Source} />;\r\n        /*case 'Timer':\r\n            return <Timer Timer={component.Timer.Times} />;*/\r\n        default:\r\n            return console.log(\"No component found\")\r\n    }\r\n}","import React from 'react';\r\nimport \"../assets/css/dashboard.css\";\r\nimport {Button, Icon, Loader} from 'semantic-ui-react';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport RenderComponent from '../service/renderComponent';\r\n\r\n\r\nclass Dashboard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {db: {}};\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(\"db.json\")\r\n            .then(res => {\r\n                this.setState({db: res.data})\r\n            })\r\n    }\r\n\r\n    renderGrid() {\r\n        var {db} = this.state;\r\n\r\n        db.DashboardConfig.map(val => {\r\n            return console.log(val)\r\n\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const seg_size = Math.floor(document.body.offsetHeight / 2) - 2;\r\n        const segment_style = {\r\n            height: seg_size + 'px',\r\n            overflow: \"auto\"\r\n        };\r\n        const bloc_style = {\r\n            padding: '1px',\r\n            marging: '2px'\r\n        };\r\n        const center_bloc_style = {\r\n            position: 'fixed',\r\n            top: '47%', left: '48%'\r\n        }\r\n        if (this.state.db.DashboardConfig !== undefined) {\r\n            return (\r\n                <div>\r\n                    <div id={\"container\"} className=\"ui grid m-0\">\r\n                        <div className=\"eight wide column\" style={bloc_style}>\r\n                            <div className=\"ui blue inverted segment\" style={segment_style}>\r\n                                {RenderComponent(this.state.db.DashboardConfig.TopLeft)}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"eight wide column\" style={bloc_style}>\r\n                            <div className=\"ui red inverted segment\" style={segment_style}>\r\n                                {RenderComponent(this.state.db.DashboardConfig.TopRight)}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"eight wide column\" style={bloc_style}>\r\n                            <div className=\"ui green inverted segment\" style={segment_style}>\r\n                                {RenderComponent(this.state.db.DashboardConfig.BottomLeft)}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"eight wide column\" style={bloc_style}>\r\n                            <div className=\"ui black inverted segment\" style={segment_style}>\r\n                                {RenderComponent(this.state.db.DashboardConfig.BottomRight)}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={\"parameter-div\"}>\r\n                        <Button className={\"m-0\"} labelPosition='right' icon as={Link} to=\"/admin\">\r\n                            <Icon name=\"cogs\"/>\r\n                             Configuration\r\n                        </Button>\r\n                    </div>\r\n                    <div style={center_bloc_style}>\r\n\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            return <Loader active/>\r\n        }\r\n    }\r\n}\r\n\r\nexport default Dashboard;","import Timer from \"./components/Timer\";\r\nimport Dashboard from \"./views/Dashboard\";\r\nimport AdminPage from \"./views/AdminPage\";\r\n\r\nconst dashBoardRoutes = [\r\n    {\r\n        path: \"/dashboard\",\r\n        name: \"Dashboard\",\r\n        component: Dashboard\r\n    },\r\n    {\r\n        path: \"/timer\",\r\n        name: \"Timer\",\r\n        component: Timer\r\n    },\r\n    {\r\n        path: \"/admin\",\r\n        name: \"AdminPage\",\r\n        component: AdminPage\r\n    },\r\n];\r\n\r\nexport default dashBoardRoutes;","import Axios from 'axios';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Container, Divider, Form, Grid, Header, Icon, Message } from 'semantic-ui-react';\r\nimport './adminPage.views.css';\r\n\r\nclass AdminPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            config: {},\r\n            WidgetList: {},\r\n            TopRight: \"\",\r\n            TopLeft: \"\",\r\n            BottomLeft: \"\",\r\n            BottomRight: \"\",\r\n            ConfigTopLeft: {},\r\n            ConfigTopRight: {},\r\n            ConfigBottomLeft: {},\r\n            ConfigBottomRight: {},\r\n        };\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        Axios.get(\"db.json\")\r\n            .then(res => {\r\n                var config = res.data\r\n                this.setState({\r\n                    config: config,\r\n                    TopLeft: Object.keys(config.DashboardConfig.TopLeft)[0],\r\n                    TopRight: Object.keys(config.DashboardConfig.TopRight)[0],\r\n                    BottomLeft: Object.keys(config.DashboardConfig.BottomLeft)[0],\r\n                    BottomRight: Object.keys(config.DashboardConfig.BottomRight)[0],\r\n                    ConfigTopLeft: config.DashboardConfig.TopLeft,\r\n                    ConfigTopRight: config.DashboardConfig.TopRight,\r\n                    ConfigBottomLeft: config.DashboardConfig.BottomLeft,\r\n                    ConfigBottomRight: config.DashboardConfig.BottomRight,\r\n                })\r\n            })\r\n\r\n        Axios.get(\"widgetConfig.json\")\r\n            .then(res => {\r\n                this.setState({\r\n                    WidgetList: res.data\r\n                })\r\n            })\r\n    }\r\n\r\n    createOptionList() {\r\n        var options = [];\r\n        for (let [key] of Object.entries(this.state.WidgetList)) {\r\n            options.push({\r\n                key: key,\r\n                value: key,\r\n                text: key,\r\n            })\r\n        }\r\n        return options\r\n    }\r\n\r\n    handleChangeForm = (e, { name, value }) => {\r\n        const nameSplited = name.split(\".\")\r\n        const stateKey = nameSplited[0]\r\n        const nameKey = nameSplited[1]\r\n        const widgetKey = nameSplited[2]\r\n        let config = Object.assign({}, this.state[stateKey])\r\n        if (Object.keys(this.state[stateKey])[0] === widgetKey) {\r\n            config[widgetKey][nameKey] = value\r\n            this.setState(\r\n                { [stateKey]: config }\r\n            )\r\n        } else {\r\n            let config = Object.assign({}, this.state.WidgetList[widgetKey])\r\n            config = {\r\n                [widgetKey]: config\r\n            }\r\n            this.setState(\r\n                { [stateKey]: config }\r\n            )\r\n        }\r\n    }\r\n\r\n    generateFormSelect(values) {\r\n        var options = [];\r\n\r\n        values.forEach(val => {\r\n            options.push({\r\n                key: val,\r\n                value: val,\r\n                text: val,\r\n            })\r\n        })\r\n        return options\r\n    }\r\n\r\n    generateForm = (configAvailable, widgetKey, position) => {\r\n        var formField = [];\r\n\r\n        if (configAvailable[widgetKey] !== undefined && widgetKey !== 'Radio') {\r\n            for (var [param, value] of Object.entries(configAvailable[widgetKey])) {\r\n                if (typeof value === \"object\") {\r\n                    if (this.state.config.DashboardConfig[position][widgetKey] !== undefined) {\r\n                        formField.push(\r\n                            <Form.Select\r\n                                key={param}\r\n                                name={\"Config\" + position + \".\" + param + \".\" + widgetKey}\r\n                                label={param}\r\n                                defaultValue={this.state.config.DashboardConfig[position][widgetKey][param] || \"default\"}\r\n                                options={this.generateFormSelect(value)}\r\n                                onChange={this.handleChangeForm}\r\n                            />\r\n                        )\r\n                    } else {\r\n                        //Use default config\r\n                        formField.push(\r\n                            <Form.Select\r\n                                key={param}\r\n                                name={\"Config\" + position + \".\" + param + \".\" + widgetKey}\r\n                                label={param}\r\n                                defaultValue={value[0]}\r\n                                options={this.generateFormSelect(value)}\r\n                                onChange={this.handleChangeForm}\r\n                            />\r\n                        )\r\n                    }\r\n                } else {\r\n                    if (this.state.config.DashboardConfig[position][widgetKey] !== undefined) {\r\n                        let name = \"Config\" + position + \".\" + param + \".\" + widgetKey\r\n                        formField.push(\r\n                            <Form.Input\r\n                                label={param}\r\n                                defaultValue={this.state.config.DashboardConfig[position][widgetKey][param]}\r\n                                key={param}\r\n                                name={name}\r\n                                onChange={this.handleChangeForm}\r\n                            />\r\n                        );\r\n                    } else {\r\n                        //Use default config\r\n                        formField.push(\r\n                            <Form.Input\r\n                                label={param}\r\n                                defaultValue={value}\r\n                                key={param}\r\n                                name={\"Config\" + position + \".\" + param + \".\" + widgetKey}\r\n                                onChange={this.handleChangeForm}\r\n                            />\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            return <Message info icon='warning sign' content='La radio ne peut être modifier' />\r\n        }\r\n        return formField;\r\n    }\r\n\r\n    handleChange = (e, { name, value }) => {\r\n        let config = Object.assign({}, this.state.WidgetList[value])\r\n        config = {\r\n            [value]: config\r\n        }\r\n\r\n        this.setState({\r\n            [\"Config\" + name]: config\r\n        })\r\n\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n    updateJson = () => {\r\n        const { config, ConfigTopLeft, ConfigBottomLeft, ConfigTopRight, ConfigBottomRight } = this.state;\r\n\r\n        config.DashboardConfig.TopLeft = ConfigTopLeft;\r\n        config.DashboardConfig.TopRight = ConfigTopRight;\r\n        config.DashboardConfig.BottomLeft = ConfigBottomLeft;\r\n        config.DashboardConfig.BottomRight = ConfigBottomRight;\r\n\r\n        Axios.post(\"/api/save\", config).then(\r\n            console.log(\"Sauvegarde réussie\")\r\n        )\r\n    }\r\n\r\n    renderFormPosition() {\r\n        const { BottomLeft, BottomRight, TopLeft, TopRight, config, WidgetList } = this.state;\r\n        if (config.DashboardConfig !== undefined) {\r\n            return (\r\n                <Form onSubmit={this.updateJson}>\r\n\r\n                    <Grid columns={2}>\r\n                        <Grid.Row>\r\n                            <Grid.Column>\r\n                                <Form.Select name='TopLeft' label=\"Position Haut Gauche\" defaultValue={TopLeft} options={this.createOptionList()} onChange={this.handleChange} />\r\n                            </Grid.Column>\r\n                            <Grid.Column>\r\n                                <Form.Select name='TopRight' label=\"Position Haut Droite\" defaultValue={TopRight} options={this.createOptionList()} onChange={this.handleChange} />\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                        <Grid.Row>\r\n                            <Grid.Column>\r\n                                <Form.Select name='BottomLeft' label=\"Position Bas Gauche\" defaultValue={BottomLeft} options={this.createOptionList()} onChange={this.handleChange} />\r\n                            </Grid.Column>\r\n                            <Grid.Column>\r\n                                <Form.Select name='BottomRight' label=\"Position Bas Droite\" defaultValue={BottomRight} options={this.createOptionList()} onChange={this.handleChange} />\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                        <Grid.Row>\r\n                            <Grid.Column>\r\n                                <Divider horizontal>Config Haut Gauche</Divider>\r\n                                {this.generateForm(WidgetList, TopLeft, \"TopLeft\")}\r\n                            </Grid.Column>\r\n                            <Grid.Column>\r\n                                <Divider horizontal>Config Haut Droite</Divider>\r\n                                {this.generateForm(WidgetList, TopRight, \"TopRight\")}\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                        <Grid.Row>\r\n                            <Grid.Column>\r\n                                <Divider horizontal>Config Bas Gauche</Divider>\r\n                                {this.generateForm(WidgetList, BottomLeft, \"BottomLeft\")}\r\n                            </Grid.Column>\r\n                            <Grid.Column>\r\n                                <Divider horizontal>Config Bas Droite</Divider>\r\n                                {this.generateForm(WidgetList, BottomRight, \"BottomRight\")}\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                    </Grid>\r\n                    <br />\r\n                    <Button.Group floated='right'>\r\n                        <Button type='reset' onClick={() => window.location.reload}>Annuler</Button>\r\n                        <Button.Or text='ou' />\r\n                        <Button positive type='submit' onClick={this.handleSave}>Valider</Button>\r\n                    </Button.Group>\r\n                </Form>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Container>\r\n                    <Button icon labelPosition='left' fluid as={Link} to=\"/dashboard\">\r\n                        <Icon name=\"arrow left\" />\r\n                        Retour\r\n                    </Button>\r\n                    <Header as='h1'>Admin Page</Header>\r\n                    {this.renderFormPosition()}\r\n                </Container>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AdminPage;","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport routes from \"./routes.js\";\r\n\r\nconst switchRoutes = (\r\n    <Switch>\r\n        {routes.map((prop, key)=>{\r\n            return(\r\n                <Route path={prop.path} component={prop.component} key={key} />\r\n            );\r\n        })}\r\n        <Route render={() => <Redirect from =\"/\" to=\"/dashboard\" />} />\r\n    </Switch>\r\n);\r\n\r\nexport default function SwitchRoute({ ...rest}) {\r\n    return(\r\n        <div>\r\n            {switchRoutes}\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport { Button, Container, Header, Icon, Grid, Image } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport AudioPlayer from \"react-h5-audio-player\";\r\nimport '../assets/css/player.scss';\r\n\r\nclass RadioPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { seconds: 0 };\r\n    }\r\n\r\n    tick() {\r\n        this.setState(prevState => ({\r\n            seconds: prevState.seconds + 1\r\n        }));\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n    componentDidMount() {\r\n        Axios.get(\"widgetConfig.json\")\r\n            .then(res => {\r\n                const config = res.data;\r\n                console.log(config)\r\n                const source = config.Radio.Source;\r\n                let options = Object.entries(source).map((key, i) => {\r\n                    if (key[1].Active !== true) return true;\r\n                    return (\r\n                        <Grid.Column>\r\n                            <Image style={{ \"cursor\": \"pointer\"}} circular size='small' src={key[1].Img} onClick={() => this.createMusicPlayer(key[1].Source)} />\r\n                        </Grid.Column>\r\n                    );\r\n                });\r\n\r\n                this.setState({\r\n                    listRadio: options\r\n                });\r\n            });\r\n\r\n        this.interval = setInterval(() => this.tick(), 1000);\r\n    }\r\n\r\n    createMusicPlayer(src) {\r\n        this.setState({\r\n            srcRadio: src\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const date = new Date();\r\n\r\n        let hours = ('0' + date.getHours()).slice(-2);\r\n        let minutes = ('0' + date.getMinutes()).slice(-2);\r\n        let seconds = ('0' + date.getSeconds()).slice(-2);\r\n        let hour_val = hours + \":\" + minutes + \":\" + seconds;\r\n\r\n        return (\r\n            <div>\r\n                <Button icon labelPosition='left' fluid as={Link} to=\"/\">\r\n                    <Icon name=\"arrow left\" />\r\n                    Retour\r\n                </Button>\r\n                <Container>\r\n                    <Header as='h1'>\r\n                        <div className=\"ui grid\">\r\n                            <div className=\"four column row\">\r\n                                <div className=\"left floated column\">Radio page</div>\r\n                                <div className=\"right floated column\" style={{ textAlign: \"right\" }}>{hour_val}</div>\r\n                            </div>\r\n                        </div>\r\n                    </Header>\r\n                    <div className=\"ui container\">\r\n                        <h4 className=\"ui horizontal divider header\"><i className=\"music icon\" />Web Radio</h4>\r\n\r\n                        <Grid columns={4}>\r\n                            <Grid.Row >\r\n                                {this.state.listRadio}\r\n                            </Grid.Row>\r\n                        </Grid>\r\n\r\n                        <div id=\"radioPlayer\">\r\n                            <AudioPlayer autoPlay src={this.state.srcRadio}\r\n                                onPlay={e => console.log(\"onPlay\")} />\r\n                        </div>\r\n                    </div>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RadioPage","import React from \"react\";\r\nimport {Button, Container, Header, Icon} from \"semantic-ui-react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\n\r\nclass TimerPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {seconds: 0};\r\n    }\r\n\r\n    tick() {\r\n        this.setState(prevState => ({\r\n            seconds: prevState.seconds + 1\r\n        }));\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n    componentDidMount() {\r\n        Axios.get(\"config.json\")\r\n            .then(res => {\r\n                const config = res.data;\r\n                this.setState({\r\n                    config: config,\r\n                })\r\n            });\r\n\r\n        this.interval = setInterval(() => this.tick(), 1000);\r\n    }\r\n\r\n    render() {\r\n        const date = new Date();\r\n\r\n        let hours = ('0' + date.getHours()).slice(-2);\r\n        let minutes = ('0' + date.getMinutes()).slice(-2);\r\n        let seconds = ('0' + date.getSeconds()).slice(-2);\r\n        let hour_val = hours + \":\" + minutes + \":\" + seconds;\r\n\r\n        return (\r\n            <div>\r\n                <Button icon labelPosition='left' fluid as={Link} to=\"/\">\r\n                    <Icon name=\"arrow left\"/>\r\n                    Retour\r\n                </Button>\r\n                <Container>\r\n                    <Header as='h1'>\r\n                        <div className=\"ui grid\">\r\n                            <div className=\"four column row\">\r\n                                <div className=\"left floated column\">Radio page</div>\r\n                                <div className=\"right floated column\" style={{textAlign:\"right\"}}>{hour_val}</div>\r\n                            </div>\r\n                        </div>\r\n                    </Header>\r\n                    <div className=\"ui container\">\r\n                        <h4 className=\"ui horizontal divider header\"><i className=\"clock icon\"/>Minuteur</h4>\r\n\r\n                    </div>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TimerPage","import { createBrowserHistory } from \"history\";\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Route, Router, Switch } from \"react-router-dom\";\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport 'semantic-ui-less/semantic.less';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport SwitchRoute from \"./SwitchRoutes\";\r\nimport RadioPage from \"./views/RadioPage\";\r\nimport TimerPage from \"./views/TimerPage\";\r\nconst hist = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n    <Router history={hist}>\r\n        <Switch>\r\n            <Route path=\"/radio\" component={RadioPage} />\r\n            <Route path=\"/timer\" component={TimerPage} />\r\n            <Route path=\"/\" component={SwitchRoute} />\r\n        </Switch>\r\n       \r\n    </Router>\r\n    , document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}